1
00:00:03,120 --> 00:00:09,679
to my video. So, as you can see here,

2
00:00:05,359 --> 00:00:12,160
this is my KGO visualizer website. And

3
00:00:09,679 --> 00:00:15,759
uh for those who don&#39;t already know,

4
00:00:12,160 --> 00:00:18,000
Katago is a it&#39;s an AI go engine similar

5
00:00:15,759 --> 00:00:21,920
to Alpha Go, which is very popular like

6
00:00:18,000 --> 00:00:24,320
10 years ago. Um it&#39;s like similarly,

7
00:00:21,920 --> 00:00:27,760
Kado is like super strong and no human

8
00:00:24,320 --> 00:00:30,080
can really possibly beat it, I&#39;ll say.

9
00:00:27,760 --> 00:00:32,160
And the purpose of this website is

10
00:00:30,080 --> 00:00:35,120
really simple to like to basically help

11
00:00:32,160 --> 00:00:38,559
people understand how tal works as well

12
00:00:35,120 --> 00:00:42,960
as uh to help them analyze their game

13
00:00:38,559 --> 00:00:44,800
and to improve their go technique. So,

14
00:00:42,960 --> 00:00:46,559
uh let me just show you how this works.

15
00:00:44,800 --> 00:00:48,960
So, here I&#39;m going to like refresh my

16
00:00:46,559 --> 00:00:51,280
website. It&#39;s going to show you a demo.

17
00:00:48,960 --> 00:00:53,120
Uh so, first you can see it&#39;s a loading

18
00:00:51,280 --> 00:00:54,719
screen and once it once it finish

19
00:00:53,120 --> 00:00:57,600
loading it&#39;s going to show you a game

20
00:00:54,719 --> 00:00:59,520
board like a real go game board. And

21
00:00:57,600 --> 00:01:04,640
there&#39;s like the control buttons and

22
00:00:59,520 --> 00:01:06,640
move forward or go backward. Yeah. Um so

23
00:01:04,640 --> 00:01:10,960
let&#39;s say this is the first move. The

24
00:01:06,640 --> 00:01:15,360
black places at 16 Q16 and all of these

25
00:01:10,960 --> 00:01:18,320
red uh like moves. Um there are the

26
00:01:15,360 --> 00:01:21,280
recommended recommended moves uh by

27
00:01:18,320 --> 00:01:25,840
Kate. So

28
00:01:21,280 --> 00:01:28,240
um the more r the a move is the like the

29
00:01:25,840 --> 00:01:32,720
more recommendated level recommendation

30
00:01:28,240 --> 00:01:36,159
level cl like or like the more t

31
00:01:32,720 --> 00:01:40,720
recommends this move. Um

32
00:01:36,159 --> 00:01:43,759
so in this case d4 is obviously most

33
00:01:40,720 --> 00:01:46,640
recommended move although you might say

34
00:01:43,759 --> 00:01:49,360
maybe like this move has a win rate of I

35
00:01:46,640 --> 00:01:52,720
don&#39;t know 56.9. Why didn&#39;t Tado choose

36
00:01:49,360 --> 00:01:55,439
it? Well, to be honest, I can&#39;t really

37
00:01:52,720 --> 00:01:58,159
answer this question, but uh based on

38
00:01:55,439 --> 00:02:01,040
Tado&#39;s order, this move is the best

39
00:01:58,159 --> 00:02:05,200
move. And actually, I agree because I&#39;m

40
00:02:01,040 --> 00:02:06,719
also go player. Uh and if you scroll

41
00:02:05,200 --> 00:02:09,759
scroll down, you can see there&#39;s a V

42
00:02:06,719 --> 00:02:11,520
rate graph. Um so, as we move forward,

43
00:02:09,759 --> 00:02:15,680
you can see this graph is also getting

44
00:02:11,520 --> 00:02:18,000
updated. It&#39;s going to show you the uh

45
00:02:15,680 --> 00:02:20,879
live win rate for each move. and select

46
00:02:18,000 --> 00:02:22,080
how you change. Um, also you can hover

47
00:02:20,879 --> 00:02:24,000
your you can actually hover your mouse

48
00:02:22,080 --> 00:02:27,360
over the graph and it&#39;s going to show

49
00:02:24,000 --> 00:02:30,480
you a uh ready to line and you can like

50
00:02:27,360 --> 00:02:32,800
hover on it and to basically

51
00:02:30,480 --> 00:02:36,200
get to the move you want. It&#39;s like

52
00:02:32,800 --> 00:02:36,200
super quickly.

53
00:02:36,480 --> 00:02:43,120
Okay. So um in terms of the technical

54
00:02:40,319 --> 00:02:45,920
part um this website as you can see here

55
00:02:43,120 --> 00:02:49,360
is made of it&#39;s actually separated into

56
00:02:45,920 --> 00:02:52,959
a into back end and front end. So for

57
00:02:49,360 --> 00:02:56,640
front end uh is mainly made with react

58
00:02:52,959 --> 00:03:03,040
and just basically pure HTML CSS.

59
00:02:56,640 --> 00:03:08,480
Um this game board is pure HTML kama uh

60
00:03:03,040 --> 00:03:10,319
with uh with a few like packages but

61
00:03:08,480 --> 00:03:13,760
okay and this uh vinary graph this is

62
00:03:10,319 --> 00:03:15,599
made by uh charjs or in specific for

63
00:03:13,760 --> 00:03:19,840
react it&#39;s char I think it&#39;s react

64
00:03:15,599 --> 00:03:23,120
chargs too and uh overall I&#39;ll say front

65
00:03:19,840 --> 00:03:26,879
end is kind of simple and

66
00:03:23,120 --> 00:03:29,519
uh for back end well back end this uh I

67
00:03:26,879 --> 00:03:32,640
I I use the general or actually the the

68
00:03:29,519 --> 00:03:34,159
general rest framework for back end. So

69
00:03:32,640 --> 00:03:38,319
the general rest framework it basically

70
00:03:34,159 --> 00:03:42,720
allows me to open a host open a like

71
00:03:38,319 --> 00:03:46,400
like basically a window to uh process

72
00:03:42,720 --> 00:03:48,640
the request sent from my front end which

73
00:03:46,400 --> 00:03:53,920
is my react or just like website you can

74
00:03:48,640 --> 00:03:56,400
see here. Um so what does it do is that

75
00:03:53,920 --> 00:03:58,879
it&#39;s going to take requests from my

76
00:03:56,400 --> 00:04:01,519
front end which is my react also I use

77
00:03:58,879 --> 00:04:03,840
apps for uh sending requests in my front

78
00:04:01,519 --> 00:04:08,480
end. So once you receive a request, it&#39;s

79
00:04:03,840 --> 00:04:12,159
going to process the request and send a

80
00:04:08,480 --> 00:04:15,280
uh request like another request to my

81
00:04:12,159 --> 00:04:18,959
AWS which stands for Amazon web service

82
00:04:15,280 --> 00:04:21,919
EC2 server and the EC2 server because

83
00:04:18,959 --> 00:04:23,919
it&#39;s uh specifically GPU is a lot

84
00:04:21,919 --> 00:04:26,400
stronger than my local machine. So it&#39;s

85
00:04:23,919 --> 00:04:28,320
going to process the data and like a lot

86
00:04:26,400 --> 00:04:31,680
quicker than my local to my uh local

87
00:04:28,320 --> 00:04:34,639
machine and send the data back to my uh

88
00:04:31,680 --> 00:04:38,479
the general rest framework and and then

89
00:04:34,639 --> 00:04:41,680
I&#39;m going to forward this uh response to

90
00:04:38,479 --> 00:04:44,639
to my uh front end code my react like

91
00:04:41,680 --> 00:04:48,560
the website you see here. Um yeah and

92
00:04:44,639 --> 00:04:52,320
that&#39;s like a complete request.

93
00:04:48,560 --> 00:04:55,120
Um, yeah. Anyways, that&#39;s basically how

94
00:04:52,320 --> 00:04:55,120
my website work.

